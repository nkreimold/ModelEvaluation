% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ReportCreation.R
\name{Perf_report}
\alias{Perf_report}
\alias{Perf_report.data.frame}
\title{Model Performance Report Generation}
\usage{
Perf_report(.data, ...)

\method{Perf_report}{data.frame}(
  ModelResults,
  SegmentDF,
  DataDict = NULL,
  ClassActual = "",
  ClassPrediction = "",
  NumericActual = "",
  NumericPrediction = "",
  grouping_var = "",
  time_var = "",
  cal.model = NULL,
  XVALObjectPath = NULL,
  outpath = NULL,
  output_format = "html",
  output_file = NULL,
  output_dir = tempdir(),
  browse = TRUE,
  ...
)
}
\arguments{
\item{...}{arguments to be passed to methods.}

\item{ModelResults}{a tbl_dbi. with model performance}

\item{SegmentDF}{a tbl_dbi. with segmentation variables}

\item{DataDict}{dataframe specifying variable, variable description, and variable type.}

\item{ClassActual}{Name of classification model actuals}

\item{ClassPrediction}{Name of classification model prediction}

\item{NumericActual}{Name of date numeric model actuals}

\item{NumericPrediction}{Name of numeric model ouput}

\item{grouping_var}{Name of ID variable in dataset(i.e. Account number, applid)}

\item{time_var}{Name of date variable in dataset}

\item{cal.model}{Calibration model to reset PD}

\item{XVALObjectPath}{Path where cross-validation objects are stored}

\item{outpath}{a character path string. If populated, will save png and csv outputs to this folder.}

\item{output_format}{report output type. Choose either "pdf" and "html".
"pdf" create pdf file by knitr::knit().
"html" create html file by rmarkdown::render().}

\item{output_file}{name of generated file. default is NULL.}

\item{output_dir}{name of directory to generate report file. default is tempdir().}
}
\description{
The Perf_report() produces and saves objects for evaluating
performance of a two stage modeling process. Object must be of form data.frame.
}
\details{
Generate generalized Model Performance reports automatically.
You can choose to output to pdf and html files.
This is useful for complex models with many variables you wish to segment
performance around.
}
\section{Reported information}{

The Model Performance process will report the following information:

\itemize{
  \item PD K-fold Cross Validation
  \itemize{
    \item PD Model Coefficients / Significance
    \item Concordance
    \item Recalibration
  }
  \item PD Model Discrimination
  \itemize{
    \item KS Tables
    \item KS Plots
    \item Gini Curve/Lorenz Curve
    \item ROC Curve
  }
  \item PD Backtesting by Bucket
  \itemize{
    \item Time Point
    \item Aggregate
    \item PD Final
  }
  \item Loss Forecast Backtesting
  \itemize{
    \item Time Point
    \item Aggregate Loss
    \item Overall Loss Error Rate
  }
}

See vignette("Qual_repoort") for an introduction to these concepts.
}

\examples{
\donttest{

ModelResults=ModelResults
SegmentDF=SegmentDF
time_var="Time"
ClassActual="CO"
ClassPrediction="Prob.Default"
NumericPrediction="Pred.Loss"
NumericActual="REAL_LOSS"
grouping_var="Eval.ID"

#load your datadictionary
DataDict=read.csv("S:/30000/Credit Policy/Nicholas/GitHub/CECL/CECL_CL_PD_EAD/ModelEval/Report Objects/DataDictionary.csv",stringsAsFactors = F)
outpath=paste0(getwd(),"/NewFolder/")#where to save all the performance files- png, csv, etc.
output_dir=getwd()#-path where to save output html





Perf_report(ModelResults,SegmentDF,
           DataDict,
           ClassActual,ClassPrediction,
           NumericActual,NumericPrediction,
           grouping_var,
           time_var,
           cal.model,
           XVALObjectPath="S:/30000/Credit Policy/Nicholas/GitHub/CECL/CECL_CL_PD_EAD/ModelEval/Report Objects/UNSECUREDDQ90/Coefficients.RData"
           ,outpath=outpath,
           output_dir = output_dir)
}
}
\seealso{
\code{\link{Perf_report.data.frame}}.
}
